<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秦阔的个人博客</title>
  
  <subtitle>一个记忆和提升的空间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-30T07:31:49.409Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>秦阔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>高数提醒5</title>
    <link href="http://yoursite.com/2019/11/30/%E9%AB%98%E6%95%B0%E6%8F%90%E9%86%925/"/>
    <id>http://yoursite.com/2019/11/30/高数提醒5/</id>
    <published>2019-11-30T03:36:58.275Z</published>
    <updated>2019-11-30T07:31:49.409Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h1><h2 id="定积分及应用"><a href="#定积分及应用" class="headerlink" title="定积分及应用"></a>定积分及应用</h2><h3 id="定积分的概念和性质"><a href="#定积分的概念和性质" class="headerlink" title="定积分的概念和性质"></a>定积分的概念和性质</h3><ul><li>定积分中还用到了导数和极限；  </li><li>定积分是个常数，具有保序性；  </li><li>设M及m分别是函数f(x)在[a,b]上的最大值及最小值，则估计积分范围的方法为 积分在m(b-a)和M(b-a)之间；  </li><li>积分中值定理，如果函数f(x)在闭区间[a,b]上<strong>连续</strong>，则在[a,b]上至少存在一点t,使得其定积分等于f(t)(b-a)  (t在a到b 之间);  <h3 id="微积分基本公式"><a href="#微积分基本公式" class="headerlink" title="微积分基本公式"></a>微积分基本公式</h3></li><li>积分上限的函数及导数性质<br>1，如果函数f(x)在闭区间[a,b]上连续，那么积分上限的函数对积分上限x的导数等于被积函数f(t)在积分上限x处的值；<br>2，原函数存在定理一方面表明了连续函数的原函数是存在的，另一方面揭示了积分学中原函数与定积分两者之间的关系；  </li><li>牛顿-莱布尼兹公式<br>高中所用的计算方法  <h3 id="定积分的换元积分法与分部积分法"><a href="#定积分的换元积分法与分部积分法" class="headerlink" title="定积分的换元积分法与分部积分法"></a>定积分的换元积分法与分部积分法</h3></li><li>定积分的换元积分法（附带例题p169例题5-15理解)<br>1,若f(x)在[a,b]上连续且为偶函数，则算一个区间内的然后乘以2即可；若为奇函数则定积分为0；<br>2，设f(x)为周期函数，则在以T为周期的周期函数在任意一个长度为T的区间的定积分都香等；  </li><li>定积分的分部积分法<br>与计算不定积分选取u,dv的方法一致  <h3 id="反常积分"><a href="#反常积分" class="headerlink" title="反常积分"></a>反常积分</h3></li><li>无穷限的反常积分  </li><li>次方要在分母中的话考虑1的情况  </li><li>无界函数的反常积分<br>1，设x0属于[a,b]，若对x0的任意充分小的去心邻域，且f(x)在去心邻域内有定义且无界，则称x0是f(x)的瑕点（或无界间断点）；<br>2，无界函数的反常积分又称为瑕积分</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第五章&quot;&gt;&lt;a href=&quot;#第五章&quot; class=&quot;headerlink&quot; title=&quot;第五章&quot;&gt;&lt;/a&gt;第五章&lt;/h1&gt;&lt;h2 id=&quot;定积分及应用&quot;&gt;&lt;a href=&quot;#定积分及应用&quot; class=&quot;headerlink&quot; title=&quot;定积分及应用&quot;&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>感不易</title>
    <link href="http://yoursite.com/2019/11/27/%E6%84%9F%E4%B8%8D%E6%98%93/"/>
    <id>http://yoursite.com/2019/11/27/感不易/</id>
    <published>2019-11-27T05:06:07.966Z</published>
    <updated>2019-11-27T05:34:13.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不易"><a href="#不易" class="headerlink" title="不易"></a>不易</h1><ul><li>今天又是半天的工程基础训练课，现在回想一下目前学习的所有：管道安装，电焊，材料链接，电子工艺制作太阳花，安全救生，电机控制，木工，家庭电路连接……..自己感觉太不好受了，难啊！但仔细一想家里所有的电路都是父亲一手弄的，什么管道，电焊，电机控制，木工等哪样都会，越来越觉得男孩子随着年龄的增长越来越敬佩父亲的原因了！</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;不易&quot;&gt;&lt;a href=&quot;#不易&quot; class=&quot;headerlink&quot; title=&quot;不易&quot;&gt;&lt;/a&gt;不易&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;今天又是半天的工程基础训练课，现在回想一下目前学习的所有：管道安装，电焊，材料链接，电子工艺制作太阳花，安全救生，电机控制，木工
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>指针</title>
    <link href="http://yoursite.com/2019/11/26/%E6%8C%87%E9%92%88/"/>
    <id>http://yoursite.com/2019/11/26/指针/</id>
    <published>2019-11-26T14:57:50.685Z</published>
    <updated>2019-11-26T14:57:50.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><ul><li><p>由于每个整型数组元素在内存中占4个字节，因此P+1引起地址变量为4,两个指针变量相减，差为两个指针变量所指的储存单元之间的元素个数；指向结构体的指针  </p></li><li><p>函数一旦遇到 return 语句就立即返回，后面的所有语句都不会被执行到了。从这个角度看，return 语句还有强制结束函数执行的作用。  </p></li><li><p>有些时候，程序的逻辑要求我们必须逐个字符地为数组赋值，这个时候就很容易遗忘字符串结束标志’\0’。下面的代码中，我们将 26 个大写英文字符存入字符数组，并以字符串的形式输出：<br>#include &lt;stdio.h&gt;<br>int main(){<br>  char str[30];<br>  char c;<br>  int i;<br>  for(c=65,i=0; c&lt;=90; c++,i++){</p><pre><code>str[i] = c;</code></pre><p>  }<br>  printf(“%s\n”, str);</p><p>  return 0;<br>}</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;指针&quot;&gt;&lt;a href=&quot;#指针&quot; class=&quot;headerlink&quot; title=&quot;指针&quot;&gt;&lt;/a&gt;指针&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;由于每个整型数组元素在内存中占4个字节，因此P+1引起地址变量为4,两个指针变量相减，差为两个指针变量所指的储存单元之间的
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>指针预习</title>
    <link href="http://yoursite.com/2019/11/24/%E6%8C%87%E9%92%88%E9%A2%84%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/11/24/指针预习/</id>
    <published>2019-11-24T08:27:08.531Z</published>
    <updated>2019-11-24T08:27:08.532Z</updated>
    
    <content type="html"><![CDATA[<p>#指针小结<br>1，指针是一个变量，只不过存储的是另一个变量的内存地址；<br>2，指针变量可以赋值，指针的指向在程序执行中可以改变；<br>3，数组储存在一块连续的内存空间中，数组名就是 这块连续空间的首地址；<br>4，为指针数组的指针赋值：int *ptr num可以把数组名直接赋值给某个指针；也可以int *ptr num=&amp;num[0]，数组首元素赋值给指针</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#指针小结&lt;br&gt;1，指针是一个变量，只不过存储的是另一个变量的内存地址；&lt;br&gt;2，指针变量可以赋值，指针的指向在程序执行中可以改变；&lt;br&gt;3，数组储存在一块连续的内存空间中，数组名就是 这块连续空间的首地址；&lt;br&gt;4，为指针数组的指针赋值：int *ptr num可
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>必须的记得的第一次志愿活动</title>
    <link href="http://yoursite.com/2019/11/23/%E5%BF%85%E9%A1%BB%E7%9A%84%E8%AE%B0%E5%BE%97%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%BF%97%E6%84%BF%E6%B4%BB%E5%8A%A8/"/>
    <id>http://yoursite.com/2019/11/23/必须的记得的第一次志愿活动/</id>
    <published>2019-11-23T15:08:25.920Z</published>
    <updated>2019-11-29T16:57:23.028Z</updated>
    
    <content type="html"><![CDATA[<h1 id="游革命烈士林园"><a href="#游革命烈士林园" class="headerlink" title="游革命烈士林园"></a>游革命烈士林园</h1><h2 id="早起"><a href="#早起" class="headerlink" title="早起"></a>早起</h2><h3 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h3><p>因为要到烈士林园，所以今天早早的起了床，和室友一起坐车来到了这个神圣的地方，里面的环境非常好，无以言表，我对那里的地势感到非常好奇，山上的人工湖与地势巧妙的结合，大大的草坪，现实版的飞机………<br>当进入参观厅的时候，顿时感到有一股神圣之气，看着眼前的烈士留下的遗物，抗战时期的还原版场景，仿佛把我带回了抗战时期，让我久久不想离开，让我感到革命烈士的英雄事迹永载史册；革命烈士的崇高品质，将作为社会主义精神文明建设的宝贵财富与世长存；革命烈士的光辉形象，将永远激励我们去完成和实现他们未尽的事业-共产主义！革命烈士永垂不朽！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;游革命烈士林园&quot;&gt;&lt;a href=&quot;#游革命烈士林园&quot; class=&quot;headerlink&quot; title=&quot;游革命烈士林园&quot;&gt;&lt;/a&gt;游革命烈士林园&lt;/h1&gt;&lt;h2 id=&quot;早起&quot;&gt;&lt;a href=&quot;#早起&quot; class=&quot;headerlink&quot; title=&quot;早
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>学习方法</title>
    <link href="http://yoursite.com/2019/11/23/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/11/23/学习方法/</id>
    <published>2019-11-23T14:44:03.959Z</published>
    <updated>2019-11-23T14:44:03.959Z</updated>
    
    <content type="html"><![CDATA[<p>1、抱着学习的心态去</p><p>学习的前提是自己之前不懂，如果懂或者说自己会那就没必要去学习了。所以，当自己开始学习时就要暗自告诉自己：“我是来为自己的大脑补充自己原本在这方面的知识空白的。”我要把学到的东西能够准确清晰地用自己的语言表达出来，自己能够讲清楚，有条理。这才能说明你学到了，至于学会，要去靠做题来检验的。</p><p>  2、了解具体怎么学</p><p>学习，简单点说就是按照自己擅长的方式把书本上的知识输送到自己的大脑里。这一阶段主要靠“记”（包括背诵）。可以看，可以读。可以写，同时也可以听。或者听说读写并用。“记”得方式因人而异。</p><p>同时也要知道：原来记住的东西会忘的，每个人的忘性都很大，这是不争的事实。所以当自己在记一些公式、定理、概念时一定要“彻底理解”，这里的彻底理解是要仔细琢磨每个字背后的具体意思。一定要把这些概念掰开了，揉碎了去真正的理解。</p><p>自己也仔细想想自己究竟学的是个啥，自己能不能用自己的语言描述出来。如果这个“理解”的前提做的好，那后边的“记忆”就很容易，并且不容易遗忘。可以想想看，自己之前往脑子里灌输的东西是不是理解的都记得住，没有理解死记的一些东西怎么想也想不来。</p><p>所以，学习要在理解的基础上去记忆，死记硬背没有任何用，因为记住了，也不会做题。不要怕慢，只要保证质量，最后一定会达到事倍功半的效果。</p><p>3、学会总结，学会反思</p><p>知识一开始学习就是一小块一小块的学，等到一节一章或者一本都学完后，你回过头来再翻一下目录，你会发现任意学科内部整本书的编排都有一定的相关性和逻辑性。这就需要你用全局的思维去总结小节与小节之间，章与章之间的联系和不同。</p><p>这样做下来你的思路就会更加开阔，各个知识点就像树干和树枝一样清晰透明，同时你学的知识与知识之间也就会融汇贯通。之所以要总结是把所学的零碎知识进行分类整理，让自己对所学有个整体的框架。</p><p>俗话说：学而不思则罔，思而不学则殆。学习和思考必须相结合。思考，除了之前说的反复理解记忆的知识之外，我认为最重要的是反思。反思自己这一天，一周的或者一个月的学习状态和得失情况以及自己的学习效果。因为这些东西只有自己清楚，反思不是面壁思过，也不是反省。</p><p>它是对学习的一种反馈或者说是总结，是对自己前一段时间的一个工作报告。它可以为后期制定自己的学习计划和学习方法方面做出相应调整提供参考。</p><p>因为学习方法和学习计划只有适合自己的才是最好的，而探索出一条真正适合自己的学习道路需要一个过程，也需要不断探索，在这个过程中，不要有任何心理上的情绪波动，因为有些人可能一辈子都没有找到适合自己的一条学习路径，准确的说学了这么些年，到最后还是不会学习。</p><p>如果目前还没找到适合自己的学习方法，不要着急。我们应该庆幸自己距离找到适合自己的学习方法又近了一步。</p><p>4、及时反馈，认真对待错题</p><p>首先需要说明的是：目前我们国家的升学无论是中考、高考还是考研都不能说是为了教育人才而是为了筛选人才。如何体现，就是做题。做题也最能反映你对知识掌握的熟练程度。</p><p>从某种程度上说，智商不是决定因素，能力才是最主要的，而能力是可以通过自己的努力锻炼出来。打个比方：小时候学走路，一开始可能需要爸妈来扶着，后来慢慢的松开我们可以走一两步然后就走不稳了，再后来我们可能经过无数次的尝试，最后就会越来越稳，以至于后来真正地掌握成为了我们的一种下意识的行为。</p><p>学说话也是一样道理。我想说什么，我想说一种能力的掌握，一定需要经过无数次的失败或者说是挫折才能完成，但是这都没关系，我们要做打不死的小强，要转变学习的思维，纠错也是学习的一个很重要的过程。只要把之前犯得错纠正过来，自己能力每次都有提升，错误也会越来越少。</p><p>错误也从某种程度上反映自己对知识的理解不是那么到位。这个阶段要查漏补缺要回归基础，找到错的根源才是最主要的，而不是关注在对错上，因为这没有任何意义。</p><p>说到做题，我想说想要做对一道题，不仅仅要靠基础知识，更多的是对综合能力的反应和考察。比如：细节、理解能力、转换能力、表述能力以及逻辑推理能力。而这些能力就是在基础知识的基础上进行融汇贯通的能力。</p><p>所以，当考试或者平时做练习，出现了错题，必须认真对待，绝对不可以以一句粗心了，马虎了简单了事。从某种程度上说：自己之所以做错是因为自己可能真的没有掌握这方面的知识。</p><p>或者自己在某方面能力还没有达到，即使真的是粗心了马虎了也要认真对待，因为粗心马虎也是能力不足的表现。做题是对自身学习情况的一个反馈，做错题并不可怕，可怕的是我们认识不到自己的不足。</p><p>这些错题可以说是我们提高能力的源泉，错题本身也并不可怕，都是纸老虎，自己静下心仔细的推敲一下，把错题真正的弄懂比作100道会的题还要有价值的多。因为如果细心你会发现，错题不解决，以后碰到还是错，自己虽然在不停的做题，但是在不自觉中沦为做题的机器，自己本身的能力并没有提高。</p><p>做题的目的，本来就是检验能力，而对错题的解决在整个能力提升中最为重要，可以这么说，你对错题的态度将决定你能力提高的幅度。很多同学，不会做题：他们只做简单题、没有难度的题，自己一定不会错但能力永远也不会提高，那是自欺欺人的表现。</p><p>做错题，或者说研究错题是件很痛苦的事情会很不舒服。要记住，学习永远都不是一件舒服的事情，只有自己转变观念，沉浸其中，学习最终才会让我们自己有成就感。</p><p>到最后，我想说学习真的是一门学问，这其中有很多的技术和细节可讲，学习也是分阶段的，前期是“学”，后期是“练”。</p><p>只学不练，眼高手低，只练不学，也就不能回归根本。我们要认识到学习是有一定方法的，但学习没有捷径可走，我们必须付出大量的时间，去啃书去积累去犯错去提高。</p><p>只有经过反复的打磨和练习，学习这门技术才能最终被掌握。面对知识爆炸的时代，学习能力将是最重要的能力。如何学习、怎么学习，每个人都有自己的学习方法和步骤，但每个人的可能都不一样。</p><p>只有自己探索出一个真正适合自己的学习方法，才能在知识的海洋里自在遨游，不至于以后面对新知识时乱了阵脚，不知到从何下手。学习的同时也要转变思维，不要死读书，不要在意自己目前的分数和成绩，因为在意也没用，真正能够每天有收获，能力不断提高，享受学习的过程，让自己不断成长，让自己每天进步。</p><p>最终分数和成绩也就自然而然提高了。要透过现象看本质，学习这东西急不得慢慢来，脚踏实地，步步为营，让自己每天都进步一点点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、抱着学习的心态去&lt;/p&gt;
&lt;p&gt;学习的前提是自己之前不懂，如果懂或者说自己会那就没必要去学习了。所以，当自己开始学习时就要暗自告诉自己：“我是来为自己的大脑补充自己原本在这方面的知识空白的。”我要把学到的东西能够准确清晰地用自己的语言表达出来，自己能够讲清楚，有条理。这
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数组1</title>
    <link href="http://yoursite.com/2019/11/23/%E6%95%B0%E7%BB%841/"/>
    <id>http://yoursite.com/2019/11/23/数组1/</id>
    <published>2019-11-23T14:42:38.532Z</published>
    <updated>2019-11-23T14:42:38.534Z</updated>
    
    <content type="html"><![CDATA[<p>#数组<br>1，元素下标从0开始，所以循环变量从0开始；（<em>简单的事情重复做，重复的事情用心做，用心的事情坚持做</em>）<br>2，<img src="https://i.imgur.com/yP0sQ6z.jpg" alt="数组"><br>3，计算机中的查找叫做穷举法，所谓的冒泡排序就是把一个数与后面的相邻数比较，第一轮比较次数为数组长度减1,；<br>4，比较轮数N-1，每轮比较次数(N-1)-i(<em>i为循环变量</em>）<br>5,逆序实际上就是i和N-i-1位上的数字交换位置；<br>6，数组元素的删除和插入，数组是一个连续的内存空间，一旦被定义无法改变：删除的逻辑是查找要删除的数字。从下标开始，后面一个数覆盖前面一个数，接着数组的总长度减一。   </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#数组&lt;br&gt;1，元素下标从0开始，所以循环变量从0开始；（&lt;em&gt;简单的事情重复做，重复的事情用心做，用心的事情坚持做&lt;/em&gt;）&lt;br&gt;2，&lt;img src=&quot;https://i.imgur.com/yP0sQ6z.jpg&quot; alt=&quot;数组&quot;&gt;&lt;br&gt;3，计算机中的查找
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>英文论文写作网站</title>
    <link href="http://yoursite.com/2019/11/21/%E8%8B%B1%E6%96%87%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2019/11/21/英文论文写作网站/</id>
    <published>2019-11-21T07:30:48.061Z</published>
    <updated>2019-11-21T07:30:48.062Z</updated>
    
    <content type="html"><![CDATA[<p>#12个在线检查英语语法的神网站：</p><p><a href="http://t.cn/R84TMEq" target="_blank" rel="noopener">http://t.cn/R84TMEq</a></p><p>【02】能免费下载千万英文论文的神网站:</p><p>SCI HUB：<a href="http://t.cn/R84TMEW" target="_blank" rel="noopener">http://t.cn/R84TMEW</a></p><p>【03】250万本电子书籍免费下载：</p><p><a href="http://t.cn/RhAhwOU" target="_blank" rel="noopener">http://t.cn/RhAhwOU</a></p><p>【04】麻省理工学院内部课件：</p><p><a href="http://t.cn/R84TMEt" target="_blank" rel="noopener">http://t.cn/R84TMEt</a></p><p>【05】机器学习和深度学习相关论文的代码大全网：</p><p><a href="http://t.cn/RcxFy5M" target="_blank" rel="noopener">http://t.cn/RcxFy5M</a></p><p>【06】社会和人文领域里大名鼎鼎的优质出版物：</p><p><a href="http://t.cn/R84TMEI" target="_blank" rel="noopener">http://t.cn/R84TMEI</a></p><p>【07】方便地查询杂志影响力和本领域有哪些杂志scimagojr：<a href="http://t.cn/h5PNpd" target="_blank" rel="noopener">http://t.cn/h5PNpd</a></p><p>【08】超强大的美式英语语料库：</p><p><a href="http://t.cn/RN7GJN2" target="_blank" rel="noopener">http://t.cn/RN7GJN2</a></p><p>【09】跟踪学术期刊的利器：</p><p><a href="http://t.cn/zTOtkph" target="_blank" rel="noopener">http://t.cn/zTOtkph</a></p><p>【10】图形学方面所有顶级会议的论文：</p><p><a href="http://t.cn/hbA06L" target="_blank" rel="noopener">http://t.cn/hbA06L</a></p><p>【11】欧洲专利局专利数据库：</p><p><a href="http://t.cn/RfTdvTH" target="_blank" rel="noopener">http://t.cn/RfTdvTH</a></p><p>【12】美国专利商标局专利数据库：</p><p><a href="http://t.cn/RfTdvTQ" target="_blank" rel="noopener">http://t.cn/RfTdvTQ</a></p><p>【13】专门为Computer Science设计的论文查询网站：<a href="http://t.cn/zTBJw20" target="_blank" rel="noopener">http://t.cn/zTBJw20</a></p><p>【14】HighWire斯坦福学术文献电子期刊：</p><p><a href="http://t.cn/R84TMEf" target="_blank" rel="noopener">http://t.cn/R84TMEf</a></p><p>【15】英式英语语料库：</p><p><a href="http://t.cn/RtWLIZF" target="_blank" rel="noopener">http://t.cn/RtWLIZF</a></p><p>【16】搜索最常出现的英文语言搭配——Linggle：</p><p><a href="http://t.cn/RUkGMzx" target="_blank" rel="noopener">http://t.cn/RUkGMzx</a></p><p>【17】Citeseerx 免费论文搜索网：</p><p><a href="http://t.cn/RjXQPwQ" target="_blank" rel="noopener">http://t.cn/RjXQPwQ</a></p><p>【18】免费大学教科书数据库——OpenStax College：<a href="http://t.cn/Rt33AsG" target="_blank" rel="noopener">http://t.cn/Rt33AsG</a></p><p>【19】欧洲学位论文库：</p><p><a href="http://t.cn/Rp8SwiK" target="_blank" rel="noopener">http://t.cn/Rp8SwiK</a></p><p>【20】OALib免费论文搜索引擎：</p><p><a href="http://t.cn/hbIBuf" target="_blank" rel="noopener">http://t.cn/hbIBuf</a></p><p>【21】判断文章是否被EI检索：<a href="https://www.engineeringvillage.com/home.url?redir=t" target="_blank" rel="noopener">https://www.engineeringvillage.com/home.url?redir=t</a></p><p>【22】IBM专利数据库资源：</p><p><a href="https://www.ibm.com/ibm/licensing/" target="_blank" rel="noopener">https://www.ibm.com/ibm/licensing/</a></p><p>【23】Kaggle的数据资源：</p><p><a href="https://www.kaggle.com/datasets" target="_blank" rel="noopener">https://www.kaggle.com/datasets</a></p><p>【24】超好用的英文学术资源搜索引擎：<a href="https://www.semanticscholar.org/" target="_blank" rel="noopener">https://www.semanticscholar.org/</a></p><p>【25】提升LaTeX效率的小工具：<a href="http://detexify.kirelabs.org/classify.html" target="_blank" rel="noopener">http://detexify.kirelabs.org/classify.html</a></p><p>【26】LexisNexis：</p><p><a href="http://www.lexisnexis.com/ap/academic/" target="_blank" rel="noopener">http://www.lexisnexis.com/ap/academic/</a></p><p>【27】Intute学术资源搜索工具：</p><p><a href="https://www.jisc.ac.uk/" target="_blank" rel="noopener">https://www.jisc.ac.uk/</a></p><p>【28】将jpg文件转换为eps文件：</p><p><a href="http://www.tlhiv.org/rast2vec/" target="_blank" rel="noopener">http://www.tlhiv.org/rast2vec/</a></p><p>【29】FindaRticles文献论文站点：</p><p><a href="http://findarticles.com/" target="_blank" rel="noopener">http://findarticles.com/</a></p><p>【30】人肉搜索利器Checkmate：</p><p><a href="https://www.instantcheckmate.com/" target="_blank" rel="noopener">https://www.instantcheckmate.com/</a></p><p>【31】Intechopen 免费科技文献：</p><p><a href="https://www.intechopen.com/" target="_blank" rel="noopener">https://www.intechopen.com/</a></p><p>【32】写作利器 Scrivener：</p><p><a href="http://literatureandlatte.com/" target="_blank" rel="noopener">http://literatureandlatte.com/</a></p><p>【33】SemanticScholar免费学术搜索引擎：<a href="https://www.minimanuscript.com/" target="_blank" rel="noopener">https://www.minimanuscript.com/</a></p><p>【34】Arnetminer 研究者学术搜索网：</p><p><a href="https://www.aminer.cn/" target="_blank" rel="noopener">https://www.aminer.cn/</a></p><p>【35】Base Search 德国比勒菲尔德学术搜索引擎：</p><p><a href="https://www.base-search.net/" target="_blank" rel="noopener">https://www.base-search.net/</a></p><p>【36】MinimanuScript学术文献维基百科平台：<a href="https://www.minimanuscript.com/" target="_blank" rel="noopener">https://www.minimanuscript.com/</a></p><p>【37】FindaRticles文献论文搜索引擎：</p><p><a href="http://findarticles.com/" target="_blank" rel="noopener">http://findarticles.com/</a></p><p>【38】为论文中的复杂概念取一个狂帅酷霸屌的名字：<a href="http://acronymify.com/" target="_blank" rel="noopener">http://acronymify.com/</a></p><p>【39】LolMyThesis 哈佛毕业论文分享网站：</p><p><a href="http://lolmythesis.com/" target="_blank" rel="noopener">http://lolmythesis.com/</a></p><p>【40】SAGE Research Methods：</p><p><a href="http://methods.sagepub.com/" target="_blank" rel="noopener">http://methods.sagepub.com/</a></p><p>【41】Wiley Online Library：</p><p><a href="http://onlinelibrary.wiley.com/" target="_blank" rel="noopener">http://onlinelibrary.wiley.com/</a></p><p>【42】检查拼写和语法错误——grammarly：<a href="https://www.grammarly.com/" target="_blank" rel="noopener">https://www.grammarly.com/</a></p><p>【43】专业英文论文写作助手——易搜搭：</p><p><a href="http://www.esoda.org/" target="_blank" rel="noopener">http://www.esoda.org/</a></p><p>【44】英语论文单词翻译解释——Wordhippo：<a href="https://www.wordhippo.com/" target="_blank" rel="noopener">https://www.wordhippo.com/</a></p><p>【45】SCI写作必备——Academic Phrasebank：<a href="http://www.phrasebank.manchester.ac.uk/introducing-work/" target="_blank" rel="noopener">http://www.phrasebank.manchester.ac.uk/introducing-work/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#12个在线检查英语语法的神网站：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://t.cn/R84TMEq&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://t.cn/R84TMEq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;【02】能免费下载千万英文论文的神网站:
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>不定积分</title>
    <link href="http://yoursite.com/2019/11/20/%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86/"/>
    <id>http://yoursite.com/2019/11/20/不定积分/</id>
    <published>2019-11-20T14:47:02.496Z</published>
    <updated>2019-11-29T16:58:15.870Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不定积分换元积分法"><a href="#不定积分换元积分法" class="headerlink" title="不定积分换元积分法"></a>不定积分换元积分法</h1><ul><li>换元积分（一类和二类）；  </li><li>分部积分法公式要记牢；  </li><li>有理函数的不定积分：有理分式化为若干个简单分时之和；  </li><li>有理真分式的不定积分要记忆；  </li><li>三角函数的不定积分；  </li><li>简单有理函数的不定积分例如:2f(1/(t^2-1)dt=ln(|t-1/t+1)|  <h3 id="现在我还没有适应这个语法，待后续会有精彩的"><a href="#现在我还没有适应这个语法，待后续会有精彩的" class="headerlink" title="现在我还没有适应这个语法，待后续会有精彩的"></a>现在我还没有适应这个语法，待后续会有精彩的</h3></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;不定积分换元积分法&quot;&gt;&lt;a href=&quot;#不定积分换元积分法&quot; class=&quot;headerlink&quot; title=&quot;不定积分换元积分法&quot;&gt;&lt;/a&gt;不定积分换元积分法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;换元积分（一类和二类）；  &lt;/li&gt;
&lt;li&gt;分部积分法公式要记牢； 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数组小杂记</title>
    <link href="http://yoursite.com/2019/11/20/%E6%95%B0%E7%BB%84%E5%B0%8F%E6%9D%82%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/20/数组小杂记/</id>
    <published>2019-11-20T13:15:26.434Z</published>
    <updated>2019-11-20T14:31:18.451Z</updated>
    
    <content type="html"><![CDATA[<p>，#几种算法<br>1，冒泡算法：先定义一个a[5],用两个for循环for(p=1;p&lt;5;p++);for(i=0;i&lt;5-p;i++); （第一个for是查找次数<br>2，选择排序法：先选择最小的那个值，数组中的数有固定的次序；<br>3，查找法（在一个数列中）从键盘上输入一个数显示其在数列中的位置；若没有则输出不存在；二分查找法前提要有顺序，从中间开始查找；<br>4，二维数组，第一个元素为a[0,0]则最后一个为…..二维数组行优先原则；<br>5，二维数组的运用:矩阵的转置，字符型数组末尾有”\0”;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;，#几种算法&lt;br&gt;1，冒泡算法：先定义一个a[5],用两个for循环for(p=1;p&amp;lt;5;p++);for(i=0;i&amp;lt;5-p;i++); （第一个for是查找次数&lt;br&gt;2，选择排序法：先选择最小的那个值，数组中的数有固定的次序；&lt;br&gt;3，查找法（在一个
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>#c注意及嵌套循环</title>
    <link href="http://yoursite.com/2019/11/18/#c%E6%B3%A8%E6%84%8F%E5%8F%8A%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF/"/>
    <id>http://yoursite.com/2019/11/18/#c注意及嵌套循环/</id>
    <published>2019-11-18T15:31:00.161Z</published>
    <updated>2019-11-29T16:56:10.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h1><p>1,外层循环控制行，内层控制具体的输入格式；<br>2,例题continue语句求1~100内非五倍数的和；即如果if条件成立，执行continue的上一语句；不成立则执行下一步；<br>3，例如求塔低的灯数：采用试探法，设顶为 x，即for(x=1;;x++),让x从初值1开始循环，直至灯数等于所求的灯数；<br>4，数字比较大时要采用long int定义；<br>5，对于1到n的平方和小于某个数时，求n，用do,while语句注意while后面的分号（s=s+n*n;n=n+1)但结果要为（n-1)!!!注意<br>6，计算相邻两项之和等于后一项的方法：定义两个初值后再换值<br>7，求1000以内最大的20个素数之和：列出几个条件【for(a=1000;a&gt;=1;a–) for(j=2;j&lt;a;j++)  if(a%j==0)break;   if(j==a&amp;&amp;i&lt;=20)/s=s+a;i++;其中i统计素数个数；if(i&gt;20)break;  后输出结果！<br>8，求双胞胎数的个数【200,1000】两素数差为2为双胞胎数。用变量i循环，用n统计双胞胎数个数………</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;循环嵌套&quot;&gt;&lt;a href=&quot;#循环嵌套&quot; class=&quot;headerlink&quot; title=&quot;循环嵌套&quot;&gt;&lt;/a&gt;循环嵌套&lt;/h1&gt;&lt;p&gt;1,外层循环控制行，内层控制具体的输入格式；&lt;br&gt;2,例题continue语句求1~100内非五倍数的和；即如果if条件成
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>高数1</title>
    <link href="http://yoursite.com/2019/11/17/%E9%AB%98%E6%95%B01/"/>
    <id>http://yoursite.com/2019/11/17/高数1/</id>
    <published>2019-11-17T11:19:55.520Z</published>
    <updated>2019-11-29T17:00:52.168Z</updated>
    
    <content type="html"><![CDATA[<h1 id="洛必达法则"><a href="#洛必达法则" class="headerlink" title="洛必达法则"></a>洛必达法则</h1><p>1.极限零比零未定型；<br>2.对于极限是无穷大减无穷大，先转化成零比零型在进型计算；<br>3.对于极限是1的无穷大型，可先取对数再转化为零比零型；同理还有零的零次方型；<br>4.对于零比零型的有时要进行适当变形，再利用等价无穷小代换求解；<br>5.还可先进行等价无穷小代换在进行计算；<br>6.如果f(x)在x0的某一邻域有二阶导数，则（x0,y0)是拐点的必要条件是f(x)的二阶导等于零；<br>7.无穷小相加结果为低阶，相乘幂之和；<br>8.导数的定义解题！！！！！<br>9.求积分的方法：  </p><ul><li>将复杂的进行凑分，换元，记公式。（提醒复习之用）  <h2 id="分部积分法：多次运用，转换变量，一般按照反对幂三指顺序，前者为u-后者为v。"><a href="#分部积分法：多次运用，转换变量，一般按照反对幂三指顺序，前者为u-后者为v。" class="headerlink" title="分部积分法：多次运用，转换变量，一般按照反对幂三指顺序，前者为u,后者为v。"></a>分部积分法：多次运用，转换变量，一般按照反对幂三指顺序，前者为u,后者为v。</h2></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;洛必达法则&quot;&gt;&lt;a href=&quot;#洛必达法则&quot; class=&quot;headerlink&quot; title=&quot;洛必达法则&quot;&gt;&lt;/a&gt;洛必达法则&lt;/h1&gt;&lt;p&gt;1.极限零比零未定型；&lt;br&gt;2.对于极限是无穷大减无穷大，先转化成零比零型在进型计算；&lt;br&gt;3.对于极限是1的无
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>与单片机相关零碎知识</title>
    <link href="http://yoursite.com/2019/11/14/%E4%B8%8E%E5%8D%95%E7%89%87%E6%9C%BA%E7%9B%B8%E5%85%B3%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2019/11/14/与单片机相关零碎知识/</id>
    <published>2019-11-14T09:03:32.196Z</published>
    <updated>2019-11-14T09:03:32.197Z</updated>
    
    <content type="html"><![CDATA[<p>#与单片机相关零碎知识<br>1.ROM程序储存器 ， 数字电路只有电平高低；<br>2.RS232电平计算机串口：高：-12V,低：12V.<br>3.数字先转换成二进制&rArr;十进制&rArr;十六进制；例如：44&rArr;2CH&rArr;2*16+c;<br>4.异或是实现“必须不同，否则就没有的一种运算；<br>5.最小系统运行的必要条件：电源、晶振、复电位；<br>6.reg52.h(定义特殊功能寄存器和位寄存器；<br>7.按位与：5&amp;2=0<br>      &emsp;&emsp;5=0101； 2=0010全不同则为零；  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#与单片机相关零碎知识&lt;br&gt;1.ROM程序储存器 ， 数字电路只有电平高低；&lt;br&gt;2.RS232电平计算机串口：高：-12V,低：12V.&lt;br&gt;3.数字先转换成二进制&amp;rArr;十进制&amp;rArr;十六进制；例如：44&amp;rArr;2CH&amp;rArr;2*16+c;&lt;br&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>正视迷茫的自己</title>
    <link href="http://yoursite.com/2019/11/13/%E6%AD%A3%E8%A7%86%E8%BF%B7%E8%8C%AB%E7%9A%84%E8%87%AA%E5%B7%B1/"/>
    <id>http://yoursite.com/2019/11/13/正视迷茫的自己/</id>
    <published>2019-11-13T15:37:17.588Z</published>
    <updated>2019-11-13T15:37:17.589Z</updated>
    
    <content type="html"><![CDATA[<p>#高数<br>##导数不定积分的几个特殊形式做到心里有数即可，英语太重要了，要加把劲啊！<br>##最近感觉学习效率特别低下，效率到哪去了？？？单片机一定要坚持学！！！时间都到哪去了，该反省了！<img src="https://i.imgur.com/NWSIfpq.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#高数&lt;br&gt;##导数不定积分的几个特殊形式做到心里有数即可，英语太重要了，要加把劲啊！&lt;br&gt;##最近感觉学习效率特别低下，效率到哪去了？？？单片机一定要坚持学！！！时间都到哪去了，该反省了！&lt;img src=&quot;https://i.imgur.com/NWSIfpq.jp
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>c语言循环小记</title>
    <link href="http://yoursite.com/2019/11/12/c%E8%AF%AD%E8%A8%80%E5%BE%AA%E7%8E%AF%E5%B0%8F%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/12/c语言循环小记/</id>
    <published>2019-11-12T15:15:13.069Z</published>
    <updated>2019-11-29T16:56:29.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h1><p>选择结构（分支结构）涉及到的关键字包括 if、else、switch、case、break，还有一个条件运算符? :（这是C语言中唯一的一个三目运算符）。其中，if…else 是最基本的结构，switch…case 和? :都是由 if…else 演化而来，它们都是为了让程序员书写更加方便。</p><p>你可以只使用 if，也可以 if…else 配对使用。另外要善于使用 switch…case 和? :，有时候它们看起来更加清爽。</p><p>if…else 可以嵌套使用，原则上嵌套的层次（深度）没有限制，但是过多的嵌套层次会让代码结构混乱。 </p><h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><p>C语言中常用的循环结构有 while 循环和 for 循环，它们都可以用来处理同一个问题，一般可以互相代替。</p><p>除了 while 和 for，C语言中还有一个 goto 语句，它也能构成循环结构。不过由于 goto 语句很容易造成代码混乱，维护和阅读困难，饱受诟病，不被推荐，而且 goto 循环完全可以被其他循环取代，所以后来的很多编程语言都取消了 goto 语句，我们也不再讲解。<br>国内很多大学仍然讲解 goto 语句，但也仅仅是完成教材所设定的课程，goto 语句在实际开发中很难见到。<br>对于 while 和 do-while 循环，循环体中应包括使循环趋于结束的语句。</p><p>对于 while 和 do-while 循环，循环变量的初始化操作应该在 while 和 do-while 语句之前完成，而 for 循环可以在内部实现循环变量的初始化。</p><p>for 循环是最常用的循环，它的功能强大，一般都可以代替其他循环。</p><p>最后还要注意 break 和 continue 关键字用于循环结构时的区别：<br>break 用来跳出所有循环，循环语句不再有执行的机会；<br>continue 用来结束本次循环，直接跳到下一次循环，如果循环条件成立，还会继续循环。</p><p>此外，break 关键字还可以用于跳出 switch…case 语句。所谓“跳出”，是指一旦遇到 break，就不再执行 switch 中的任何语句，包括当前分支中的语句和其他分支中的语句；也就是说，整个 switch 执行结束了，接着会执行整个 switch 后面的代码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;选择结构&quot;&gt;&lt;a href=&quot;#选择结构&quot; class=&quot;headerlink&quot; title=&quot;选择结构&quot;&gt;&lt;/a&gt;选择结构&lt;/h1&gt;&lt;p&gt;选择结构（分支结构）涉及到的关键字包括 if、else、switch、case、break，还有一个条件运算符? :（这是C
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>随记</title>
    <link href="http://yoursite.com/2019/11/12/%E9%9A%8F%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/12/随记/</id>
    <published>2019-11-12T06:48:54.408Z</published>
    <updated>2019-11-12T06:48:54.409Z</updated>
    
    <content type="html"><![CDATA[<p>#小小的c语言说明<br>……………………..<br>m=++n-2等价于n=n+1,m=n-2;…………….m=n++-2;等价于m=n-2<br>,mn=n+1;<br>一定要努力的学好c语言，多上机子，加油！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#小小的c语言说明&lt;br&gt;……………………..&lt;br&gt;m=++n-2等价于n=n+1,m=n-2;…………….m=n++-2;等价于m=n-2&lt;br&gt;,mn=n+1;&lt;br&gt;一定要努力的学好c语言，多上机子，加油！！！&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>New Document</title>
    <link href="http://yoursite.com/2019/11/11/New%20Document/"/>
    <id>http://yoursite.com/2019/11/11/New Document/</id>
    <published>2019-11-11T06:35:27.115Z</published>
    <updated>2019-11-29T16:57:00.174Z</updated>
    
    <content type="html"><![CDATA[<h1 id="决心"><a href="#决心" class="headerlink" title="决心"></a>决心</h1><h2 id="学习单片机"><a href="#学习单片机" class="headerlink" title="学习单片机"></a>学习单片机</h2><p>昨天我打算学习单片机，对现在的我来说学习这个的难度还是比较大的，关键是没人可以手把手指导，问题在网上查起来比较麻烦。但既然选择了远方，那就必须风雨兼程！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;决心&quot;&gt;&lt;a href=&quot;#决心&quot; class=&quot;headerlink&quot; title=&quot;决心&quot;&gt;&lt;/a&gt;决心&lt;/h1&gt;&lt;h2 id=&quot;学习单片机&quot;&gt;&lt;a href=&quot;#学习单片机&quot; class=&quot;headerlink&quot; title=&quot;学习单片机&quot;&gt;&lt;/a&gt;学习单片
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>标题</title>
    <link href="http://yoursite.com/2019/11/09/hello-world-1/"/>
    <id>http://yoursite.com/2019/11/09/hello-world-1/</id>
    <published>2019-11-08T16:41:42.777Z</published>
    <updated>2019-11-08T16:48:01.161Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/11/08/hello-world/"/>
    <id>http://yoursite.com/2019/11/08/hello-world/</id>
    <published>2019-11-08T15:19:14.180Z</published>
    <updated>2019-11-08T15:19:14.180Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
