<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秦阔的个人博客</title>
  
  <subtitle>一个记忆和提升的空间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-20T14:47:02.498Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>秦阔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>不定积分</title>
    <link href="http://yoursite.com/2019/11/20/%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86/"/>
    <id>http://yoursite.com/2019/11/20/不定积分/</id>
    <published>2019-11-20T14:47:02.496Z</published>
    <updated>2019-11-20T14:47:02.498Z</updated>
    
    <content type="html"><![CDATA[<p>#不定积分换元积分法<br>换元积分（一类和二类）；<br>分部积分法公式要记牢；<br>有理函数的不定积分：有理分式化为若干个简单分时之和；<br>有理真分式的不定积分要记忆；<br>三角函数的不定积分；<br>简单有理函数的不定积分例如:2f(1/(t^2-1)dt=ln(|t-1/t+1)|<br>###现在我还没有适应这个语法，待后续会有精彩的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#不定积分换元积分法&lt;br&gt;换元积分（一类和二类）；&lt;br&gt;分部积分法公式要记牢；&lt;br&gt;有理函数的不定积分：有理分式化为若干个简单分时之和；&lt;br&gt;有理真分式的不定积分要记忆；&lt;br&gt;三角函数的不定积分；&lt;br&gt;简单有理函数的不定积分例如:2f(1/(t^2-1)dt=l
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数组小杂记</title>
    <link href="http://yoursite.com/2019/11/20/%E6%95%B0%E7%BB%84%E5%B0%8F%E6%9D%82%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/20/数组小杂记/</id>
    <published>2019-11-20T13:15:26.434Z</published>
    <updated>2019-11-20T14:31:18.451Z</updated>
    
    <content type="html"><![CDATA[<p>，#几种算法<br>1，冒泡算法：先定义一个a[5],用两个for循环for(p=1;p&lt;5;p++);for(i=0;i&lt;5-p;i++); （第一个for是查找次数<br>2，选择排序法：先选择最小的那个值，数组中的数有固定的次序；<br>3，查找法（在一个数列中）从键盘上输入一个数显示其在数列中的位置；若没有则输出不存在；二分查找法前提要有顺序，从中间开始查找；<br>4，二维数组，第一个元素为a[0,0]则最后一个为…..二维数组行优先原则；<br>5，二维数组的运用:矩阵的转置，字符型数组末尾有”\0”;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;，#几种算法&lt;br&gt;1，冒泡算法：先定义一个a[5],用两个for循环for(p=1;p&amp;lt;5;p++);for(i=0;i&amp;lt;5-p;i++); （第一个for是查找次数&lt;br&gt;2，选择排序法：先选择最小的那个值，数组中的数有固定的次序；&lt;br&gt;3，查找法（在一个
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>#c注意及嵌套循环</title>
    <link href="http://yoursite.com/2019/11/18/#c%E6%B3%A8%E6%84%8F%E5%8F%8A%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF/"/>
    <id>http://yoursite.com/2019/11/18/#c注意及嵌套循环/</id>
    <published>2019-11-18T15:31:00.161Z</published>
    <updated>2019-11-18T15:31:00.162Z</updated>
    
    <content type="html"><![CDATA[<p>#循环嵌套<br>##1,外层循环控制行，内层控制具体的输入格式；<br>##2,例题continue语句求1~100内非五倍数的和；即如果if条件成立，执行continue的上一语句；不成立则执行下一步；<br>##3，例如求塔低的灯数：采用试探法，设顶为 x，即for(x=1;;x++),让x从初值1开始循环，直至灯数等于所求的灯数；<br>##4，数字比较大时要采用long int定义；<br>##5，对于1到n的平方和小于某个数时，求n，用do,while语句注意while后面的分号（s=s+n*n;n=n+1)但结果要为（n-1)!!!注意<br>##6，计算相邻两项之和等于后一项的方法：定义两个初值后再换值<br>##7，求1000以内最大的20个素数之和：列出几个条件【for(a=1000;a&gt;=1;a–) for(j=2;j&lt;a;j++)  if(a%j==0)break;   if(j==a&amp;&amp;i&lt;=20)/s=s+a;i++;其中i统计素数个数；if(i&gt;20)break;  后输出结果！<br>##8，求双胞胎数的个数【200,1000】两素数差为2为双胞胎数。用变量i循环，用n统计双胞胎数个数………</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#循环嵌套&lt;br&gt;##1,外层循环控制行，内层控制具体的输入格式；&lt;br&gt;##2,例题continue语句求1~100内非五倍数的和；即如果if条件成立，执行continue的上一语句；不成立则执行下一步；&lt;br&gt;##3，例如求塔低的灯数：采用试探法，设顶为 x，即for(
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>高数1</title>
    <link href="http://yoursite.com/2019/11/17/%E9%AB%98%E6%95%B01/"/>
    <id>http://yoursite.com/2019/11/17/高数1/</id>
    <published>2019-11-17T11:19:55.520Z</published>
    <updated>2019-11-17T11:19:55.521Z</updated>
    
    <content type="html"><![CDATA[<p>#洛必达法则<br>##1.极限零比零未定型；<br>##2.对于极限是无穷大减无穷大，先转化成零比零型在进型计算；<br>##3.对于极限是1的无穷大型，可先取对数再转化为零比零型；同理还有零的零次方型；<br>##4.对于零比零型的有时要进行适当变形，再利用等价无穷小代换求解；<br>##5.还可先进行等价无穷小代换在进行计算；<br>##6.如果f(x)在x0的某一邻域有二阶导数，则（x0,y0)是拐点的必要条件是f(x)的二阶导等于零；<br>##7.无穷小相加结果为低阶，相乘幂之和；<br>##8.导数的定义解题！！！！！<br>##9.求积分的方法：<br>###1.将复杂的进行凑分，换元，记公式。（提醒复习之用）<br>###2.分部积分法：多次运用，转换变量，一般按照反对幂三指顺序，前者为u,后者为v。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#洛必达法则&lt;br&gt;##1.极限零比零未定型；&lt;br&gt;##2.对于极限是无穷大减无穷大，先转化成零比零型在进型计算；&lt;br&gt;##3.对于极限是1的无穷大型，可先取对数再转化为零比零型；同理还有零的零次方型；&lt;br&gt;##4.对于零比零型的有时要进行适当变形，再利用等价无穷小代
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>与单片机相关零碎知识</title>
    <link href="http://yoursite.com/2019/11/14/%E4%B8%8E%E5%8D%95%E7%89%87%E6%9C%BA%E7%9B%B8%E5%85%B3%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2019/11/14/与单片机相关零碎知识/</id>
    <published>2019-11-14T09:03:32.196Z</published>
    <updated>2019-11-14T09:03:32.197Z</updated>
    
    <content type="html"><![CDATA[<p>#与单片机相关零碎知识<br>1.ROM程序储存器 ， 数字电路只有电平高低；<br>2.RS232电平计算机串口：高：-12V,低：12V.<br>3.数字先转换成二进制&rArr;十进制&rArr;十六进制；例如：44&rArr;2CH&rArr;2*16+c;<br>4.异或是实现“必须不同，否则就没有的一种运算；<br>5.最小系统运行的必要条件：电源、晶振、复电位；<br>6.reg52.h(定义特殊功能寄存器和位寄存器；<br>7.按位与：5&amp;2=0<br>      &emsp;&emsp;5=0101； 2=0010全不同则为零；  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#与单片机相关零碎知识&lt;br&gt;1.ROM程序储存器 ， 数字电路只有电平高低；&lt;br&gt;2.RS232电平计算机串口：高：-12V,低：12V.&lt;br&gt;3.数字先转换成二进制&amp;rArr;十进制&amp;rArr;十六进制；例如：44&amp;rArr;2CH&amp;rArr;2*16+c;&lt;br&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>正视迷茫的自己</title>
    <link href="http://yoursite.com/2019/11/13/%E6%AD%A3%E8%A7%86%E8%BF%B7%E8%8C%AB%E7%9A%84%E8%87%AA%E5%B7%B1/"/>
    <id>http://yoursite.com/2019/11/13/正视迷茫的自己/</id>
    <published>2019-11-13T15:37:17.588Z</published>
    <updated>2019-11-13T15:37:17.589Z</updated>
    
    <content type="html"><![CDATA[<p>#高数<br>##导数不定积分的几个特殊形式做到心里有数即可，英语太重要了，要加把劲啊！<br>##最近感觉学习效率特别低下，效率到哪去了？？？单片机一定要坚持学！！！时间都到哪去了，该反省了！<img src="https://i.imgur.com/NWSIfpq.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#高数&lt;br&gt;##导数不定积分的几个特殊形式做到心里有数即可，英语太重要了，要加把劲啊！&lt;br&gt;##最近感觉学习效率特别低下，效率到哪去了？？？单片机一定要坚持学！！！时间都到哪去了，该反省了！&lt;img src=&quot;https://i.imgur.com/NWSIfpq.jp
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>c语言循环小记</title>
    <link href="http://yoursite.com/2019/11/12/c%E8%AF%AD%E8%A8%80%E5%BE%AA%E7%8E%AF%E5%B0%8F%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/12/c语言循环小记/</id>
    <published>2019-11-12T15:15:13.069Z</published>
    <updated>2019-11-12T15:15:13.070Z</updated>
    
    <content type="html"><![CDATA[<p>#选择结构<br>选择结构（分支结构）涉及到的关键字包括 if、else、switch、case、break，还有一个条件运算符? :（这是C语言中唯一的一个三目运算符）。其中，if…else 是最基本的结构，switch…case 和? :都是由 if…else 演化而来，它们都是为了让程序员书写更加方便。</p><p>你可以只使用 if，也可以 if…else 配对使用。另外要善于使用 switch…case 和? :，有时候它们看起来更加清爽。</p><p>if…else 可以嵌套使用，原则上嵌套的层次（深度）没有限制，但是过多的嵌套层次会让代码结构混乱。<br>#循环结构<br>C语言中常用的循环结构有 while 循环和 for 循环，它们都可以用来处理同一个问题，一般可以互相代替。</p><p>除了 while 和 for，C语言中还有一个 goto 语句，它也能构成循环结构。不过由于 goto 语句很容易造成代码混乱，维护和阅读困难，饱受诟病，不被推荐，而且 goto 循环完全可以被其他循环取代，所以后来的很多编程语言都取消了 goto 语句，我们也不再讲解。<br>国内很多大学仍然讲解 goto 语句，但也仅仅是完成教材所设定的课程，goto 语句在实际开发中很难见到。<br>对于 while 和 do-while 循环，循环体中应包括使循环趋于结束的语句。</p><p>对于 while 和 do-while 循环，循环变量的初始化操作应该在 while 和 do-while 语句之前完成，而 for 循环可以在内部实现循环变量的初始化。</p><p>for 循环是最常用的循环，它的功能强大，一般都可以代替其他循环。</p><p>最后还要注意 break 和 continue 关键字用于循环结构时的区别：<br>break 用来跳出所有循环，循环语句不再有执行的机会；<br>continue 用来结束本次循环，直接跳到下一次循环，如果循环条件成立，还会继续循环。</p><p>此外，break 关键字还可以用于跳出 switch…case 语句。所谓“跳出”，是指一旦遇到 break，就不再执行 switch 中的任何语句，包括当前分支中的语句和其他分支中的语句；也就是说，整个 switch 执行结束了，接着会执行整个 switch 后面的代码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#选择结构&lt;br&gt;选择结构（分支结构）涉及到的关键字包括 if、else、switch、case、break，还有一个条件运算符? :（这是C语言中唯一的一个三目运算符）。其中，if…else 是最基本的结构，switch…case 和? :都是由 if…else 演化而来
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>随记</title>
    <link href="http://yoursite.com/2019/11/12/%E9%9A%8F%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/12/随记/</id>
    <published>2019-11-12T06:48:54.408Z</published>
    <updated>2019-11-12T06:48:54.409Z</updated>
    
    <content type="html"><![CDATA[<p>#小小的c语言说明<br>……………………..<br>m=++n-2等价于n=n+1,m=n-2;…………….m=n++-2;等价于m=n-2<br>,mn=n+1;<br>一定要努力的学好c语言，多上机子，加油！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#小小的c语言说明&lt;br&gt;……………………..&lt;br&gt;m=++n-2等价于n=n+1,m=n-2;…………….m=n++-2;等价于m=n-2&lt;br&gt;,mn=n+1;&lt;br&gt;一定要努力的学好c语言，多上机子，加油！！！&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>New Document</title>
    <link href="http://yoursite.com/2019/11/11/New%20Document/"/>
    <id>http://yoursite.com/2019/11/11/New Document/</id>
    <published>2019-11-11T06:35:27.115Z</published>
    <updated>2019-11-11T06:35:27.116Z</updated>
    
    <content type="html"><![CDATA[<p>#决心<br>##学习单片机<br>昨天我打算学习单片机，对现在的我来说学习这个的难度还是比较大的，关键是没人可以手把手指导，问题在网上查起来比较麻烦。但既然选择了远方，那就必须风雨兼程！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#决心&lt;br&gt;##学习单片机&lt;br&gt;昨天我打算学习单片机，对现在的我来说学习这个的难度还是比较大的，关键是没人可以手把手指导，问题在网上查起来比较麻烦。但既然选择了远方，那就必须风雨兼程！&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>标题</title>
    <link href="http://yoursite.com/2019/11/09/hello-world-1/"/>
    <id>http://yoursite.com/2019/11/09/hello-world-1/</id>
    <published>2019-11-08T16:41:42.777Z</published>
    <updated>2019-11-08T16:48:01.161Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/11/08/hello-world/"/>
    <id>http://yoursite.com/2019/11/08/hello-world/</id>
    <published>2019-11-08T15:19:14.180Z</published>
    <updated>2019-11-08T15:19:14.180Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
